{"version":3,"sources":["globalvalidator-mixin.js","registerUser.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.js","sourcesContent":["var globalValidatorMixin = {\n    data: {\n        checking: false,\n        firstLoad: []\n    },\n    validators: {\n        checkRule: function(val) {\n            this.vm.checking = true; // spinner on \n            var data = {};\n            data[this.el.name] = val;\n            return this.vm.$http[this.vm.getRequestType()]($validationUrl, data).then(this.vm.onValidateReturn.bind(this.vm)).then(this.vm.onValidateAnalyzed.bind(this.vm)).catch(this.vm.onValidateError.bind(this.vm));\n        }\n    },\n    methods: {\n        getRequestType: function() {\n            if (this.$el.querySelector('form[id=\"registerForm\"]')) {\n                var method = this.$el.querySelector('form[id=\"registerForm\"]').method;\n                return (method ? method : this.$el.method).toLowerCase();\n            } else {\n                return 'post';\n            }\n        },\n        onValidateReturn: function(res) {\n            this.checking = false;\n            return res;\n        },\n        onValidateAnalyzed: function(json) {\n            var result = Object.keys(json.data);\n            $targetEl = this.$el.querySelector('input[name=' + result[0] + ']');\n            if (json.data[result[0]]) {\n                $('#' + $($targetEl).attr('aria-describedby')).find('.tooltip-inner').first().html('Well done!');\n                return Promise.resolve()\n            } else {\n                return Promise.reject(result[0] + ' cannot be verified')\n            }\n        },\n        onValidateError: function(error) {\n            if (error.status === 422) {\n                if (error.data) {\n                    this.errorBags = error.data;\n                    var result = Object.keys(error.data);\n                    var $this = this;\n                    $(result).each(function(e, v) {\n                        if ($this.firstLoad[v] !== undefined && !$this.firstLoad[v]) {\n                            $targetEl = $this.$el.querySelector('input[name=' + v + ']');\n                            $($targetEl).tooltip('show');\n                            $('#' + $($targetEl).attr('aria-describedby')).find('.tooltip-inner').first().html(error.data[v]);\n                        } else {\n                            $this.firstLoad[v] = false;\n                        }\n                    });\n                }\n            }\n            this.checking = false;\n            return Promise.reject(error.message);\n        }\n    }\n}","var router = new VueRouter({\n     hashbang: false,\n     mode: 'html5',\n      history: true,\n     root: '/'\n});\n//var App = Vue.extend({});\n//router.start(App,'#register-box');\n//Vue.component('my-component', App);\n\nvar myVue = new Vue({\n    el: '#register-box',\n    mixins: [globalValidatorMixin],\n    http: {\n        headers: {\n            'X-CSRF-TOKEN': document.querySelector('input[name=\"_token\"]').value\n        }\n    },\n    data: {\n        user: {\n            firstName: '',\n            lastName: '',\n            userName: '',\n            email: '',\n            password: '',\n            retype_password: '',\n            agree_term: false\n        },\n        showModal: false\n    },\n    computed: {\n        placementSize: {\n            cache: false,\n            get: function() {\n                if (window.innerWidth > 991) {\n                    return 'right';\n                } else {\n                    return 'bottom';\n                }\n            }\n        }\n    },\n    ready: function() {\n        $thisVM = this;\n\n        $(\"[data-toggle=tooltip]\").tooltip({\n            placement: function() {\n                return $thisVM.placementSize;\n            }\n        });\n        document.addEventListener(\"keydown\", function(e) {\n            if (this.show && e.keyCode === 27) {\n                this.showModal = false;\n            }\n        });\n        this.$on('vue-ajax-completed',function(e){\n            if(e.caller == 'registerUser'){\n                $thisVM.onAjaxSuccess(e.payload);\n            }\n        });\n        //router.go('/user/login',false,false);\n    },\n    methods: {\n        doLogin: function() {\n            this.$http.get('/user/test', function($answer) {\n                console.log($answer);\n            });\n        },\n        onAjaxSuccess:function(_user){\n            if (_user) {\n                console.log(_user);\n                var theContents = 'Thank you for your registration ' + _user.firstName +', ' +_user.lastName+ ', redirecting to login...';\n                $.SmartMessageBox({\n                    title: \"Congratulations!!!\",\n                    content: theContents,\n                    buttons: \"[Ok]\"\n                }, function (ButtonPress, Value) {\n\n                });\n                setTimeout(function(){\n                    window.location.href = '/user/login';\n                },1500); \n            }\n        }\n    }\n});\n\n"],"sourceRoot":"/source/"}